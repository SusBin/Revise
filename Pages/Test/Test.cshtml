@page
@model Revise.Pages.Test.TestModel
@{
    var courseId = Request.Query["courseId"];
    var numQuestions = Request.Query["numQuestions"];
}

<div class="container" id="testContainer">
    <form method="get">
        <div class="form-group">
            <label for="courseId">Course</label>
            <select id="courseId" name="courseId" class="form-control">
                <option value="">Select a course</option>
                @foreach (var course in Model.Courses)
                {
                    <option value="@course.Key">@course.Value</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="numQuestions">Number of Questions</label>
            <input type="number" id="numQuestions" name="numQuestions" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Start a new test</button>
    </form>
</div>


<div class="container" id="questionsContainer">
    <form method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="courseId" value="@courseId" />
        <input type="hidden" name="numQuestions" value="@numQuestions" />

        @foreach (var question in Model.Questions)
        {
            <div class="card mb-3">
                <div class="card-header" id="question">
                    <h3>@Html.Raw(@question.Question.Replace("\n", "<br />").Replace("\t", "  "))</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(question.ImageReference))
                    {
                        <div class="row justify-content-center">
                            <img src="/images/@question.ImageReference" alt="Question Image" class="question-image" />
                        </div>
                    }
                    @for (int i = 0; i < question.Answers.Count; i++)
                    {
                        var answer = question.Answers[i];
                        <div class="row answer-row">
                            <div class="col-md-6">
                                <p class="answer">
                                    @Html.Raw(answer.Text.Replace("\n", "<br />").Replace("\t", "  "))
                                </p>
                            </div>
                            <div class="col-md-6 text-right">
                                <input type="checkbox" class="hidden-checkbox" name="answers[@question.Id][@i]" value="true" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        <button type="submit" class="btn btn-primary">Submit Test</button>
    </form>
</div>

<script type="text/javascript">
    // Get the containers
    var testContainer = document.querySelector('#testContainer');
    var questionsContainer = document.querySelector('#questionsContainer');

    // Check if the question div contains any text
    var question = document.querySelector('#question');

    // If the question div has content, hide the test container and show the questions container
    if (question && question.textContent.trim() !== '') {
        testContainer.style.display = 'none';
        questionsContainer.style.display = 'block';
    } else {
        // Otherwise, show the test container and hide the questions container
        testContainer.style.display = 'block';
        questionsContainer.style.display = 'none';
    }

    // Get all the answer rows
    var answerRows = document.querySelectorAll('.answer-row');

    // Add a click event listener to each answer row
    answerRows.forEach(function (answerRow) {
        answerRow.addEventListener('click', function () {
            // When an answer row is clicked, toggle the 'selected' class
            this.classList.toggle('selected');

            // Find the checkbox within the clicked answer row
            var checkbox = this.querySelector('input[type="checkbox"]');

            // If the checkbox exists, set its checked property to the opposite of its current value
            if (checkbox) {
                checkbox.checked = !checkbox.checked;
            }
        });
    });

</script>